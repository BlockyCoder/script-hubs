local Library = {}


-- Random UI Name
local LibraryName = tostring(math.random(100000,200000))..tostring(math.random(100000,200000))..tostring(math.random(100000,200000))


local HttpService = game:GetService("HttpService")

function Library:Drag(obj)
	local UserInputService = game:GetService("UserInputService")

	local gui = obj

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

function Library:CheckKeyVis(xHubName)
	local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	local hub = playerGui:FindFirstChild(xHubName)

	if hub then
		local keyframe = hub:FindFirstChild("Main-Key")
		if keyframe then
			return true
		end
	end

	return false
end





function Library:Create(xHubName,xGameName)
	local xHubName = xHubName or "UI Library"
	local xGameName = xGameName or "UI LIb IDK :)"
	
	
	local ScreenGui = Instance.new("ScreenGui")
local Main = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TabHolder = Instance.new("Frame")
local MainHolder = Instance.new("Frame")
local Holder = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local UIPadding = Instance.new("UIPadding")
local Topbar = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Close = Instance.new("ImageButton")
local UICorner_2 = Instance.new("UICorner")
local ImageLabel = Instance.new("ImageLabel")
local UIScale = Instance.new("UIScale")
local Minimize = Instance.new("ImageButton")
local UICorner_3 = Instance.new("UICorner")
local ImageLabel_2 = Instance.new("ImageLabel")
local UIScale_2 = Instance.new("UIScale")
local Title = Instance.new("TextButton")
local UIPadding_2 = Instance.new("UIPadding")
local UICorner_4 = Instance.new("UICorner")
local pageHold = Instance.new("Frame")
local pages = Instance.new("Folder")

--Properties:

	ScreenGui.Parent = game.CoreGui
	ScreenGui.ResetOnSpawn = false 
	ScreenGui.Name = xHubName
	
	
	-- Example usage:
	local isVisible = Library:CheckKeyVis(xHubName)

	if isVisible then
		print("The key is visible.")
		return
	else
		print("The key is not visible.")
	end
	
	
Main.Name = "Main"
	Main.Parent = ScreenGui
Main.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainFrame.Name = "MainFrame"
MainFrame.Parent = Main
MainFrame.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.343902439, 0, 0.153481007, 0)
MainFrame.Size = UDim2.new(0, 500, 0, 475)

TabHolder.Name = "TabHolder"
TabHolder.Parent = MainFrame
TabHolder.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TabHolder.BackgroundTransparency = 0.650
TabHolder.BorderColor3 = Color3.fromRGB(27, 42, 53)
TabHolder.Position = UDim2.new(0.00192309567, 0, 0.075789474, 0)
TabHolder.Size = UDim2.new(0, 205, 0, 438)
TabHolder.ZIndex = 2

MainHolder.Name = "MainHolder"
MainHolder.Parent = TabHolder
MainHolder.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
MainHolder.BorderColor3 = Color3.fromRGB(27, 42, 53)
MainHolder.BorderSizePixel = 0
MainHolder.Size = UDim2.new(1, 0, 1, 0)
MainHolder.ZIndex = 2

Holder.Name = "Holder"
Holder.Parent = MainHolder
Holder.Active = true
Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Holder.BackgroundTransparency = 1.000
Holder.BorderColor3 = Color3.fromRGB(27, 42, 53)
Holder.Size = UDim2.new(1, 0, 1, 0)
Holder.ZIndex = 3
Holder.ScrollBarThickness = 0

UIListLayout.Parent = Holder
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 6)

UIPadding.Parent = Holder
UIPadding.PaddingTop = UDim.new(0, 10)

Topbar.Name = "Topbar"
Topbar.Parent = MainFrame
Topbar.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Topbar.BorderColor3 = Color3.fromRGB(27, 42, 53)
Topbar.Size = UDim2.new(0, 500, 0, 36)

UICorner.CornerRadius = UDim.new(0, 5)
UICorner.Parent = Topbar

Close.Name = "Close"
Close.Parent = Topbar
Close.Active = false
Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(27, 42, 53)
Close.Position = UDim2.new(0.940269768, 0, 0.194444448, 0)
Close.Selectable = false
Close.Size = UDim2.new(0, 21, 0, 21)

UICorner_2.CornerRadius = UDim.new(0, 4)
UICorner_2.Parent = Close

ImageLabel.Parent = Close
ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
ImageLabel.Position = UDim2.new(0.5, 1, 0.5, 0)
ImageLabel.Size = UDim2.new(0, 21, 0, 21)
ImageLabel.Image = "rbxassetid://7743878857"
ImageLabel.ImageColor3 = Color3.fromRGB(134, 134, 134)

UIScale.Parent = ImageLabel
UIScale.Scale = 0.700

Minimize.Name = "Minimize"
Minimize.Parent = Topbar
Minimize.Active = false
Minimize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(27, 42, 53)
Minimize.Position = UDim2.new(0.892100215, 0, 0.194444448, 0)
Minimize.Selectable = false
Minimize.Size = UDim2.new(0, 21, 0, 21)

UICorner_3.CornerRadius = UDim.new(0, 4)
UICorner_3.Parent = Minimize

ImageLabel_2.Parent = Minimize
ImageLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
ImageLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_2.Size = UDim2.new(0, 21, 0, 21)
ImageLabel_2.Image = "rbxassetid://7733997870"
ImageLabel_2.ImageColor3 = Color3.fromRGB(134, 134, 134)

UIScale_2.Parent = ImageLabel_2
UIScale_2.Scale = 0.600

Title.Name = "Title"
Title.Parent = Topbar
Title.Active = false
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.BorderColor3 = Color3.fromRGB(27, 42, 53)
Title.Position = UDim2.new(0.00192678231, 0, 0, 0)
Title.Selectable = false
Title.Size = UDim2.new(0, 200, 0, 36)
Title.Font = Enum.Font.GothamMedium
Title.Text = "Name: "..xHubName.." Game: "..xGameName
Title.TextColor3 = Color3.fromRGB(161, 161, 161)
Title.TextSize = 13.000
Title.TextXAlignment = Enum.TextXAlignment.Left

UIPadding_2.Parent = Title
UIPadding_2.PaddingLeft = UDim.new(0, 10)

UICorner_4.CornerRadius = UDim.new(0, 5)
UICorner_4.Parent = MainFrame

pageHold.Name = "pageHold"
pageHold.Parent = MainFrame
pageHold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
pageHold.BackgroundTransparency = 1.000
pageHold.BorderColor3 = Color3.fromRGB(0, 0, 0)
pageHold.BorderSizePixel = 0
pageHold.Position = UDim2.new(0.41192311, 0, 0.075789474, 0)
pageHold.Size = UDim2.new(0, 294, 0, 438)

pages.Name = "pages"
pages.Parent = pageHold
	
	-- Visibility toggle functions
	local function toggleVisibility()
		if ScreenGui.Parent then
			ScreenGui.Parent = nil
		else
			ScreenGui.Parent = game.CoreGui
		end
	end

	Close.MouseButton1Click:Connect(toggleVisibility)
	Minimize.MouseButton1Click:Connect(toggleVisibility)

	-- Add drag functionality to MainFrame
	Library:Drag(MainFrame)
	
	
	-- Function to create a notification with tween animation
	function Library:ShowNotify(Name, Desc, Duration)
		-- Create GUI elements
		local ScreenGui = Instance.new("ScreenGui")
		local Main = Instance.new("Frame")
		local Title = Instance.new("TextLabel")
		local desc = Instance.new("TextLabel")
		local UICorner = Instance.new("UICorner")

		-- Set properties for GUI elements
		ScreenGui.Parent = game.CoreGui
		ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

		Main.Name = "Main"
		Main.Parent = ScreenGui
		Main.BackgroundColor3 = Color3.fromRGB(23, 23, 25)
		Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Main.BorderSizePixel = 0
		Main.Size = UDim2.new(0, 360, 0, 124)
		Main.Position = UDim2.new(1, -360, 0.789889395, 0) -- Start off-screen

		Title.Name = "Title"
		Title.Parent = Main
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Title.BorderSizePixel = 0
		Title.Size = UDim2.new(1, 0, 0, 37)
		Title.Font = Enum.Font.SourceSans
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextScaled = true
		Title.TextSize = 14.000
		Title.TextWrapped = true
		Title.Text = Name -- Set notification title

		desc.Name = "desc"
		desc.Parent = Main
		desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		desc.BackgroundTransparency = 1.000
		desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
		desc.BorderSizePixel = 0
		desc.Size = UDim2.new(1, 0, 0, 70)
		desc.Position = UDim2.new(0, 0, 0.435483873, 0)
		desc.Font = Enum.Font.SourceSans
		desc.TextColor3 = Color3.fromRGB(255, 255, 255)
		desc.TextScaled = true
		desc.TextSize = 14.000
		desc.TextWrapped = true
		desc.Text = Desc -- Set notification description

		UICorner.CornerRadius = UDim.new(0, 12)
		UICorner.Parent = Main

		-- Function to animate notification appearance using TweenService
		local function animateNotification()
			local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out, 0, false)
			local goal = {}
			goal.Position = UDim2.new(0.681170881, 0, 0.789889395, 0)

			local tween = game:GetService("TweenService"):Create(Main, tweenInfo, goal)
			tween:Play()
		end

		-- Function to remove the notification after a specified duration
		local function removeNotification()
			wait(Duration)

			local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.In, 0, false)
			local goal = {}
			goal.Position = UDim2.new(1, 0, 0.789889395, 0)

			local tween = game:GetService("TweenService"):Create(Main, tweenInfo, goal)
			tween:Play()

			tween.Completed:Connect(function()
				ScreenGui:Destroy()
			end)
		end

		-- Start the animations
		animateNotification()
		spawn(removeNotification)
	end

	function Library:Tab(TabNam)
		local TabNam = TabNam or "Tab"
		
		--tab button
		
		local Example = Instance.new("TextButton")
		local UICorner = Instance.new("UICorner")
		local TextLabel = Instance.new("TextLabel")

		--Properties:

		Example.Name = "Example"
		Example.Parent = Holder
		Example.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Example.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Example.Position = UDim2.new(0.106965177, 0, 0, 0)
		Example.Selectable = false
		Example.Size = UDim2.new(0, 172, 0, 31)
		Example.ZIndex = 6
		Example.AutoButtonColor = false
		Example.Text = ""

		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Example

		TextLabel.Parent = Example
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
		TextLabel.Size = UDim2.new(0, 172, 0, 31)
		TextLabel.ZIndex = 7
		TextLabel.Font = Enum.Font.GothamMedium
		TextLabel.Text = TabNam
		TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
		TextLabel.TextSize = 12.000

	
	
		---Tab frame
		
		local Elemenfram = Instance.new("Frame")
		local ScrollElem = Instance.new("ScrollingFrame")
		local UIListLayout = Instance.new("UIListLayout")

		--Properties:

		Elemenfram.Name = "Elemenfram"
		Elemenfram.Parent = pages
		Elemenfram.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Elemenfram.BackgroundTransparency = 1.000
		Elemenfram.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Elemenfram.BorderSizePixel = 0
		Elemenfram.Position = UDim2.new(0, 0, 0.0228310507, 0)
		Elemenfram.Size = UDim2.new(0, 294, 0, 428)

		ScrollElem.Name = "ScrollElem"
		ScrollElem.Parent = Elemenfram
		ScrollElem.Active = true
		ScrollElem.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ScrollElem.BackgroundTransparency = 1.000
		ScrollElem.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ScrollElem.BorderSizePixel = 0
		ScrollElem.Size = UDim2.new(1, 0, 1, 0)

		UIListLayout.Parent = ScrollElem
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		
		local elements = {}
		
		
		function elements:Button(ButName, Callback)
			local ButName = ButName or "Button"
			local ButtonFunction = {}
			local Callback = Callback or function() end
			

			local Button = Instance.new("TextButton")
			local UICorner = Instance.new("UICorner")
			local TextLabel = Instance.new("TextLabel")
			local UIPadding = Instance.new("UIPadding")
			local Status = Instance.new("Frame")
			local ActualThing = Instance.new("Frame")
			local ImageLabel = Instance.new("ImageLabel")
			local UIScale = Instance.new("UIScale")

			--Properties:

			Button.Name = "Button"
			Button.Parent = ScrollElem
			Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			Button.BorderColor3 = Color3.fromRGB(27, 42, 53)
			Button.Position = UDim2.new(0, 0, 0.439393938, 0)
			Button.Selectable = false
			Button.Size = UDim2.new(1, 0, 0, 31)
			Button.AutoButtonColor = false
			Button.Text = ""

			UICorner.CornerRadius = UDim.new(0, 5)
			UICorner.Parent = Button

			TextLabel.Parent = Button
			TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel.BackgroundTransparency = 1.000
			TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
			TextLabel.Size = UDim2.new(0, 194, 0, 31)
			TextLabel.Font = Enum.Font.GothamMedium
			TextLabel.Text = ButName
			TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
			TextLabel.TextSize = 12.000
			TextLabel.TextXAlignment = Enum.TextXAlignment.Left

			UIPadding.Parent = TextLabel
			UIPadding.PaddingLeft = UDim.new(0, 10)

			Status.Name = "Status"
			Status.Parent = Button
			Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Status.BackgroundTransparency = 1.000
			Status.BorderColor3 = Color3.fromRGB(27, 42, 53)
			Status.Position = UDim2.new(0.839826822, 0, 0, 0)
			Status.Size = UDim2.new(0, 37, 0, 31)

			ActualThing.Name = "ActualThing"
			ActualThing.Parent = Status
			ActualThing.AnchorPoint = Vector2.new(0.5, 0.5)
			ActualThing.BackgroundColor3 = Color3.fromRGB(106, 0, 255)
			ActualThing.BackgroundTransparency = 1.000
			ActualThing.BorderColor3 = Color3.fromRGB(27, 42, 53)
			ActualThing.Position = UDim2.new(0.5, 0, 0.5, 0)
			ActualThing.Size = UDim2.new(0, 20, 0, 20)

			ImageLabel.Parent = ActualThing
			ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
			ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ImageLabel.BackgroundTransparency = 1.000
			ImageLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
			ImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
			ImageLabel.Size = UDim2.new(0, 20, 0, 20)
			ImageLabel.Image = "rbxassetid://7734010488"
			ImageLabel.ImageColor3 = Color3.fromRGB(104, 104, 104)

			UIScale.Parent = ImageLabel
			UIScale.Scale = 0.800
		

			
		function elements:KeySystem(KeyName, subname, Desc, key, Link)
		
				local FileName = xHubName.."-Keys.JSON"
				
				
				
				local function saveKeysToFile(keys)
					local success, errorMessage = pcall(function()
						local data = {Keys = keys}
						local jsonData = HttpService:JSONEncode(data)
						writefile(FileName, jsonData)
					end)

					if success then
						Library:ShowNotify("Save Success", "Keys successfully saved to file.", 5)
					else
						Library:ShowNotify("Save Error", "Error saving keys to file: " .. errorMessage, 5)
					end
				end

				local function getLatestValidKey()
					local validKey = nil
					local success, errorMessage = pcall(function()
						if isfile(FileName) then
							local jsonData = readfile(FileName)
							local data = HttpService:JSONDecode(jsonData)
							local keys = data.Keys

							for _, key in ipairs(keys) do
								local validationSuccess, keyResponse = pcall(function()
									return game:HttpGet("https://redirect-api.work.ink/tokenValid/" .. key)
								end)

								if validationSuccess and keyResponse:find('{"valid":true}') then
									validKey = key
									Library:ShowNotify("Valid Key", "Valid key found!!", 5)
									break
								end
							end
						else
							Library:ShowNotify("File Error", "File does not exist.", 5)
						end
					end)

					if not success then
						Library:ShowNotify("Retrieval Error", "Error retrieving keys from file: " .. errorMessage, 5)
					end
					return validKey
				end

				local function fetchAndExecuteScript(scriptUrl)
					local scriptSuccess, scriptError = pcall(function()
						local scriptSource = game:HttpGet(scriptUrl, true)
						local loadedScript = loadstring(scriptSource)
						if loadedScript then
							local executionSuccess, executionError = pcall(loadedScript)
							if not executionSuccess then
								Library:ShowNotify("Execution Error", "Failed to execute script: " .. (executionError or "Unknown error"), 5)
							end
						else
							Library:ShowNotify("Load Error", "Failed to load script from URL.", 5)
						end
					end)

					if not scriptSuccess then
						Library:ShowNotify("Fetch Error", "Failed to fetch script source: " .. (scriptError or "Unknown error"), 5)
					end
				end


			local MainKey = Instance.new("Frame")
			local Title = Instance.new("TextLabel")
			local UICorner = Instance.new("UICorner")
			local Shadow = Instance.new("Frame")
			local Image = Instance.new("ImageLabel")
			local Subtitle = Instance.new("TextLabel")
			local Input = Instance.new("Frame")
			local UICorner_2 = Instance.new("UICorner")
			local InputBox = Instance.new("TextBox")
			local KeyNote = Instance.new("TextLabel")
			local NoteTitle = Instance.new("TextLabel")
			local NoteMessage = Instance.new("TextLabel")
			local Hide = Instance.new("ImageButton")

			--Properties:

				MainKey.Name = "Main-Key"
				MainKey.Parent = ScreenGui
				MainKey.AnchorPoint = Vector2.new(0.5, 0.5)
				MainKey.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
				MainKey.BorderColor3 = Color3.fromRGB(27, 42, 53)
				MainKey.BorderSizePixel = 0
				MainKey.Position = UDim2.new(0.5, 0, 0.5, 0)
				MainKey.Size = UDim2.new(0, 500, 0, 187)

			Title.Name = "Title"
				Title.Parent = MainKey
			Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Title.BackgroundTransparency = 1.000
			Title.BorderColor3 = Color3.fromRGB(27, 42, 53)
			Title.BorderSizePixel = 0
			Title.Position = UDim2.new(0.0500000007, 0, 0.134099811, 0)
			Title.Size = UDim2.new(0, 200, 0, 16)
			Title.Font = Enum.Font.GothamMedium
			Title.Text = KeyName
			Title.TextColor3 = Color3.fromRGB(240, 240, 240)
			Title.TextScaled = true
			Title.TextSize = 14.000
			Title.TextWrapped = true
			Title.TextXAlignment = Enum.TextXAlignment.Left

			UICorner.CornerRadius = UDim.new(0, 9)
			UICorner.Parent = Main

			Shadow.Name = "Shadow"
				Shadow.Parent = MainKey
			Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
			Shadow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Shadow.BackgroundTransparency = 1.000
			Shadow.BorderColor3 = Color3.fromRGB(27, 42, 53)
			Shadow.BorderSizePixel = 0
			Shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
			Shadow.Size = UDim2.new(1, 35, 1.09625673, 35)
			Shadow.ZIndex = 0

			Image.Name = "Image"
			Image.Parent = Shadow
			Image.AnchorPoint = Vector2.new(0.5, 0.5)
			Image.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Image.BackgroundTransparency = 1.000
			Image.BorderColor3 = Color3.fromRGB(27, 42, 53)
			Image.BorderSizePixel = 0
			Image.Position = UDim2.new(0.5, 0, 0.5, 0)
			Image.Size = UDim2.new(1.60000002, 0, 1.29999995, 0)
			Image.ZIndex = 0
			Image.Image = "rbxassetid://5587865193"
			Image.ImageColor3 = Color3.fromRGB(20, 20, 20)
			Image.ImageTransparency = 0.500

			Subtitle.Name = "Subtitle"
				Subtitle.Parent = MainKey
			Subtitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Subtitle.BackgroundTransparency = 1.000
			Subtitle.BorderColor3 = Color3.fromRGB(27, 42, 53)
			Subtitle.BorderSizePixel = 0
			Subtitle.Position = UDim2.new(0.0500000007, 0, 0.22243315, 0)
			Subtitle.Size = UDim2.new(0, 200, 0, 13)
			Subtitle.Font = Enum.Font.GothamMedium
			Subtitle.Text = subname
			Subtitle.TextColor3 = Color3.fromRGB(200, 200, 200)
			Subtitle.TextScaled = true
			Subtitle.TextSize = 14.000
			Subtitle.TextWrapped = true
			Subtitle.TextXAlignment = Enum.TextXAlignment.Left

			Input.Name = "Input"
				Input.Parent = MainKey
			Input.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			Input.BorderColor3 = Color3.fromRGB(27, 42, 53)
			Input.BorderSizePixel = 0
			Input.Position = UDim2.new(0.0500000007, 0, 0.493475944, 0)
			Input.Size = UDim2.new(0, 206, 0, 35)

			UICorner_2.CornerRadius = UDim.new(0, 6)
			UICorner_2.Parent = Input

			InputBox.Name = "InputBox"
			InputBox.Parent = Input
			InputBox.AnchorPoint = Vector2.new(0.5, 0.5)
			InputBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			InputBox.BackgroundTransparency = 1.000
			InputBox.BorderColor3 = Color3.fromRGB(27, 42, 53)
			InputBox.BorderSizePixel = 0
			InputBox.Position = UDim2.new(0.517499566, 0, 0.5, 0)
			InputBox.Size = UDim2.new(1, -15, 0, 14)
			InputBox.ClearTextOnFocus = false
			InputBox.Font = Enum.Font.GothamMedium
			InputBox.PlaceholderText = "key"
			InputBox.Text = ""
			InputBox.TextColor3 = Color3.fromRGB(240, 240, 240)
			InputBox.TextScaled = true
			InputBox.TextSize = 14.000
			InputBox.TextWrapped = true
			InputBox.TextXAlignment = Enum.TextXAlignment.Left

			KeyNote.Name = "KeyNote"
				KeyNote.Parent = MainKey
			KeyNote.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			KeyNote.BackgroundTransparency = 1.000
			KeyNote.BorderColor3 = Color3.fromRGB(27, 42, 53)
			KeyNote.BorderSizePixel = 0
			KeyNote.Position = UDim2.new(0.0500000007, 0, 0.388208568, 0)
			KeyNote.Size = UDim2.new(0, 200, 0, 13)
			KeyNote.Font = Enum.Font.GothamMedium
			KeyNote.Text = "Key"
			KeyNote.TextColor3 = Color3.fromRGB(150, 150, 150)
			KeyNote.TextScaled = true
			KeyNote.TextSize = 14.000
			KeyNote.TextWrapped = true
			KeyNote.TextXAlignment = Enum.TextXAlignment.Left

			NoteTitle.Name = "NoteTitle"
				NoteTitle.Parent = MainKey
			NoteTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			NoteTitle.BackgroundTransparency = 1.000
			NoteTitle.BorderColor3 = Color3.fromRGB(27, 42, 53)
			NoteTitle.BorderSizePixel = 0
			NoteTitle.Position = UDim2.new(0.537999988, 0, 0.388208568, 0)
			NoteTitle.Size = UDim2.new(0, 200, 0, 13)
			NoteTitle.Font = Enum.Font.GothamMedium
			NoteTitle.Text = "Note"
			NoteTitle.TextColor3 = Color3.fromRGB(150, 150, 150)
			NoteTitle.TextScaled = true
			NoteTitle.TextSize = 14.000
			NoteTitle.TextWrapped = true
			NoteTitle.TextXAlignment = Enum.TextXAlignment.Left

			NoteMessage.Name = "NoteMessage"
				NoteMessage.Parent = MainKey
			NoteMessage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			NoteMessage.BackgroundTransparency = 1.000
			NoteMessage.BorderColor3 = Color3.fromRGB(27, 42, 53)
			NoteMessage.BorderSizePixel = 0
			NoteMessage.Position = UDim2.new(0.537999988, 0, 0.469518661, 0)
			NoteMessage.Size = UDim2.new(0, 200, 0, 39)
			NoteMessage.Font = Enum.Font.GothamMedium
			NoteMessage.Text = Desc
			NoteMessage.TextColor3 = Color3.fromRGB(240, 240, 240)
			NoteMessage.TextSize = 14.000
			NoteMessage.TextWrapped = true
			NoteMessage.TextXAlignment = Enum.TextXAlignment.Left
			NoteMessage.TextYAlignment = Enum.TextYAlignment.Top

			Hide.Name = "Hide"
				Hide.Parent = MainKey
			Hide.AnchorPoint = Vector2.new(0.5, 0.5)
			Hide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Hide.BackgroundTransparency = 1.000
			Hide.BorderColor3 = Color3.fromRGB(27, 42, 53)
			Hide.BorderSizePixel = 0
			Hide.Position = UDim2.new(0.942000031, 0, 0.152406424, 0)
			Hide.Size = UDim2.new(0, 24, 0, 24)
			Hide.ZIndex = 5
			Hide.Image = "http://www.roblox.com/asset/?id=10137832201"
			Hide.ImageColor3 = Color3.fromRGB(240, 240, 240)
			Hide.ImageTransparency = 0.300
			Hide.ScaleType = Enum.ScaleType.Fit
			
			
				_G.Key = getLatestValidKey()
				_G.CheckedKey = _G.Key ~= nil

				if _G.CheckedKey then
					Library:Destroy()
					fetchAndExecuteScript(Link)
				else
					Library:ShowNotify("Key Status", "Key is not valid or not found.", 5)
				end

				local function CheckKey()
					if _G.CheckedKey then
						Library:ShowNotify("Key Status", "Key already checked and validated.", 5)
						return
					end

					local success, keyResponse = pcall(function()
						return game:HttpGet("https://redirect-api.work.ink/tokenValid/" .. _G.Key)
					end)

					if not success then
						Library:ShowNotify("Validation Error", "Error fetching key validation: " .. keyResponse, 5)
						return
					end

					if keyResponse:find('{"valid":true}') then
						_G.CheckedKey = true
						Library:ShowNotify("Key Valid", "Key is correct and validated.", 5)
						saveKeysToFile({_G.Key})
					elseif keyResponse:find('{"valid":false}') then
						Library:ShowNotify("Key Invalid", "Key is incorrect.", 5)
					else
						Library:ShowNotify("Validation Error", "Unexpected response: " .. keyResponse, 5)
					end
				end
				
				_G.Key = InputBox.Text
				CheckKey()
			
			
			end
			
		end
		-- Return the instance
		return {
			TabHolder = TabHolder,
			MainHolder = MainHolder,
			Holder = Holder,
			Title = Title,
			Close = Close,
			Minimize = Minimize,
			pageHold = pageHold,
			pages = pages,
			ElementF = elements
		}
	
end
	return Library
end
return Library
